package fixgamemanagement;

import java.util.ArrayList;
import javax.swing.JDialog;
import javax.swing.JOptionPane;

/**
 *
 * @Chase Uphaus --- Fixation Gaming
 */
public class viewGames extends javax.swing.JFrame
{

    /**
     * Creates new form viewGames
     */
    private static Inventory games;
    public viewGames()
    {
        initComponents();
    }
    
    public viewGames(Inventory g)
    {
        initComponents();
        games = g;
        genreBox.setVisible(false);
        nameBox.setVisible(false);
        searchType.add(genBtn);
        searchType.add(nameBtn);
        for (int i = 0; i < games.size(); i++) gamesDisp.add(games.get(i).getName());
        gameCount.setText(gamesDisp.getItemCount() + " Game(s)");
        
    }//End overloaded constructor

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        searchType = new javax.swing.ButtonGroup();
        typeTag = new javax.swing.JLabel();
        nameBtn = new javax.swing.JRadioButton();
        genBtn = new javax.swing.JRadioButton();
        nameBox = new javax.swing.JTextField();
        genreBox = new javax.swing.JComboBox<>();
        searchButton = new javax.swing.JButton();
        gamesDisp = new java.awt.List();
        resultsLabel = new javax.swing.JLabel();
        rstBtn = new javax.swing.JButton();
        viewBtn = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        gameCount = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("View or Search Games");

        typeTag.setText("Search Type:");

        nameBtn.setText("Name");
        nameBtn.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                nameBtnItemStateChanged(evt);
            }
        });
        nameBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                nameBtnActionPerformed(evt);
            }
        });

        genBtn.setText("Genre");
        genBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                genBtnActionPerformed(evt);
            }
        });

        genreBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "FPS", "Simulation", "Horror", "Racing", "Adult Comedy", "Sports", "Kid", "Escape", "Rhythm", "Action", "Adventure", "Strategy", "Puzzle", "Shooter", "Fighting", "Card", "Art", "Co-op", "Design", "Violent", "Gore" }));

        searchButton.setText("Search!");
        searchButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                searchButtonActionPerformed(evt);
            }
        });

        gamesDisp.setName(""); // NOI18N
        gamesDisp.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                gamesDispActionPerformed(evt);
            }
        });

        resultsLabel.setText("All Games");

        rstBtn.setText("Reset");
        rstBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                rstBtnActionPerformed(evt);
            }
        });

        viewBtn.setText("View Game");
        viewBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                viewBtnActionPerformed(evt);
            }
        });

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gamesDisp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(typeTag)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(genBtn)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(genreBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(nameBtn)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(nameBox, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(resultsLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(searchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(rstBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(gameCount, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(153, 153, 153)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(viewBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(backButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(typeTag)
                            .addComponent(nameBtn)
                            .addComponent(nameBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(genBtn)
                            .addComponent(genreBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rstBtn))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(gameCount, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(resultsLabel)))
                    .addComponent(searchButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gamesDisp, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(viewBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(backButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void genBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_genBtnActionPerformed
    {//GEN-HEADEREND:event_genBtnActionPerformed
        genreBox.setVisible(true);
        nameBox.setVisible(false);
    }//GEN-LAST:event_genBtnActionPerformed

    private void nameBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_nameBtnActionPerformed
    {//GEN-HEADEREND:event_nameBtnActionPerformed
         genreBox.setVisible(false);
         nameBox.setVisible(true);
    }//GEN-LAST:event_nameBtnActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_searchButtonActionPerformed
    {//GEN-HEADEREND:event_searchButtonActionPerformed
        try
        {            
            ArrayList<Game> results;
            if (genBtn.isSelected())
            {
                results = games.genreSearch(genreBox.getSelectedItem().toString());
            }
            else if (nameBox.getText().isEmpty()) throw new Exception();
            else
            {
                results = games.nameSearch(nameBox.getText());
            }
            gamesDisp.removeAll();
            resultsLabel.setText("Search Results: ");
            for (int i = 0; i < results.size(); i++)
            {
                gamesDisp.add(results.get(i).getName());
            }//End for
            gameCount.setText(gamesDisp.getItemCount() + " Game(s)");
        }//End try
        catch (Exception e) {e.printStackTrace(); JOptionPane.showMessageDialog(null, "Please make sure the name field is not empty...");}
    }//GEN-LAST:event_searchButtonActionPerformed

    private void gamesDispActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_gamesDispActionPerformed
    {//GEN-HEADEREND:event_gamesDispActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gamesDispActionPerformed

    private void rstBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_rstBtnActionPerformed
    {//GEN-HEADEREND:event_rstBtnActionPerformed
        gamesDisp.removeAll();
        resultsLabel.setText("All Games");
        for (int i = 0; i < games.size(); i++) gamesDisp.add(games.get(i).getName());
        gameCount.setText(gamesDisp.getItemCount() + " Game(s)");
    }//GEN-LAST:event_rstBtnActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_backButtonActionPerformed
    {//GEN-HEADEREND:event_backButtonActionPerformed
        dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    private void viewBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_viewBtnActionPerformed
    {//GEN-HEADEREND:event_viewBtnActionPerformed
        try
        {
            String selected = gamesDisp.getSelectedItem();
            Game current = games.getGame(selected);
            JDialog inspect = new inspectGame(this, true, current);
            inspect.setVisible(true);
        }//End Try
        catch (Exception e) {e.printStackTrace();}
    }//GEN-LAST:event_viewBtnActionPerformed

    private void nameBtnItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_nameBtnItemStateChanged
    {//GEN-HEADEREND:event_nameBtnItemStateChanged
        
    }//GEN-LAST:event_nameBtnItemStateChanged

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JLabel gameCount;
    private java.awt.List gamesDisp;
    private javax.swing.JRadioButton genBtn;
    private javax.swing.JComboBox<String> genreBox;
    private javax.swing.JTextField nameBox;
    private javax.swing.JRadioButton nameBtn;
    private javax.swing.JLabel resultsLabel;
    private javax.swing.JButton rstBtn;
    private javax.swing.JButton searchButton;
    private javax.swing.ButtonGroup searchType;
    private javax.swing.JLabel typeTag;
    private javax.swing.JButton viewBtn;
    // End of variables declaration//GEN-END:variables
}
